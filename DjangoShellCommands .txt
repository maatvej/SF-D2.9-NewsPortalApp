	from NewsPortalApp.models import *

1. Создать двух пользователей (с помощью метода User.objects.create_user('username').

	u1 = User.objects.create_user('Alex')
	u2 = User.objects.create_user('Nick')

2. Создать два объекта модели Author, связанные с пользователями.

	a1 = Author.objects.create(user=u1)
	a2 = Author.objects.create(user=u2)

3. Добавить 4 категории в модель Category.

	C1 = Category.objects.create(titles='Sport')
	C2 = Category.objects.create(titles='Science')
	C3 = Category.objects.create(titles='Cinema')
	C4 = Category.objects.create(titles='Politics')

4. Добавить 2 статьи и 1 новость.

	Post.objects.create(author=a1, options='A', header='Top 10 football players', body='bla bla bla')
	Post.objects.create(author=a2, options='N', header='Fresh News', body='somebody')
	Post.objects.create(author=a2, options='A', header='Math for students', body='Numerical Methods')
	
5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).

	Post.objects.get(id=1).category.add(C1)
	Post.objects.get(id=2).category.add(C2)
	Post.objects.get(id=2).category.add(C3)
	Post.objects.get(id=3).category.add(C4)

6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).

	Comment.objects.create(post=Post.objects.get(id=1), user=u2, commentBody='cbody1')
	Comment.objects.create(post=Post.objects.get(id=2), user=u1, commentBody='Nice!')
	Comment.objects.create(post=Post.objects.get(id=2), user=u1, commentBody='Damn!!!')
	Comment.objects.create(post=Post.objects.get(id=3), user=u1, commentBody='interesting...')

7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.

	Comment.objects.get(id=1).like()
	Comment.objects.get(id=2).like()
	Comment.objects.get(id=2).like()
	Comment.objects.get(id=3).like()
	Comment.objects.get(id=3).like()
	Comment.objects.get(id=3).like()
	Comment.objects.get(id=4).like()
	Comment.objects.get(id=4).like()
	Comment.objects.get(id=3).dislike()
	Post.objects.get(id=1).like()
	Post.objects.get(id=1).like()
	Post.objects.get(id=1).like()
	Post.objects.get(id=2).like()
	Post.objects.get(id=2).like()
	Post.objects.get(id=3).dislike()
	Post.objects.get(id=3).like()
	Post.objects.get(id=3).like()

8. Обновить рейтинги пользователей.

	a1.update_rating()
	a2.update_rating()

9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).

	topUser = Author.objects.order_by('-rating').first()
	topUser.user.username

10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.

	topArticle = Post.objects.filter(options='A').order_by('-rating')[:1]
	for i in topArticle:
		i.postingDate
		i.author.user.username
		i.rating
		i.header
		i.preview()
	

11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.

	AllComments = Comment.objects.filter(post=topArticle)[::]
	for i in AllComments:
		i.commentDate
		i.user.username
		i.commentRating
		i.commentBody

	